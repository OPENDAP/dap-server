1998-11-05  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* Fixed a bug where the output of structure members was hosed (see
	ClientStructure::print_val()). This prevented loaddods from
	reading structure members properly.
	

1998-06-08  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* Fixed bug where writeval was not located even if it was on the
	path or in DODS_ROOT/bin.

	* Fixed error handling. loaddods now exits on an error passed back
	from writeval. 

	* Fixed a bug in ClientStr::write_val where deserialize was not
	called at the start of a Sequence. This meant that the first
	element of every sequence was garbage.

	* Made verbose a global and moved messages in ClientStr.cc about
	Nans only appear when the verbose option is used (-v).

1998-03-20  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* Added support for vectors of strings to loaddods.

	* Added support for error messages to writeval, asciival and
	loaddods. loaddods now uses mexErrMsgTxt to display error messages.

1998-03-16  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* Added the asciival program. This is a simple filter (similar to
	writeval) that can be used to generate ASCII tables of DODS data.
	The input may be either a URL, local file or stdin. In the later
	case the output from a data filter can be piped directly into the
	program (so this client can be used on the server side as a filter
	for data that is then sent as ASCII to the real client).

Fri Oct 24 16:52:51 1997  James Gallagher  <jimg@localhost>

	* Added to get_pathname() so that the CWD is searched first.

Wed Sep 10 15:43:33 1997  James Gallagher  <jimg@localhost>

	* Added a feature to writeval that prints the DAS to stdout - so
	that users can look at the DAS with out interning any values.

	* Fixed a bug in loaddods which caused attribute values with
	embedded spaces to be truncated.

Fri Sep  5 09:57:09 1997  James Gallagher  <jimg@localhost>

	* Added a new feature to writeval: -A can be used to print the
	attribute structure to stdout. In order to `project' only one
	specific container (in a way analogous to the way projections are
	used to filter out specific variables from a data request) use the
	-c switch. Make sure to separate the -A switch and the URL and
	optional -c switch with a `--'.

Thu Sep  4 15:49:31 1997  James Gallagher  <jimg@localhost>

	* verbose (-v) now controls whether writeval prints `Constraint: '
	when processing the per-url option -c.

Mon Jun  9 17:18:37 1997  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* writeval can now read from stdin.

Mon May  5 17:35:54 1997  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* Error message from urlqueue is now slightly more helpful...

	* loaddods now returns arguments when called using Matlab's return
	arg syntax ([a b c] = loaddods();).

	* Fixed the bug where loaddods dumped core with given -v or -k as
	a single option.

Mon Apr 21 09:47:03 1997  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* Change: loaddods now looks along the user's PATH and in
	DODS_ROOT/etc for writeval. 

	* Change: writeval is now installed in DODS_ROOT/etc (it is a
	`helper' program). 

	* Added include of <sys/msg.h> for lunix.

	* Fixed a bug where fseek() failed to advance beyond a newline
	character when the data transfer size was an integral power of
	two. I fixed the bug by removing all calls to fseek() and using
	fgets() instead. I also removed all calls to fscanf() and replaced
	them with calls to fgets() followed by sscanf() since that made
	looking at the text information read by loaddods simpler.

	* Modified the output stream of writeval so that it is simpler for
	loaddods to parse. This was done during the coarse of
	finding/fixing a particularly nasty bug in loaddods - I've left
	the changes in place because they don't slow the system down and
	will simplify finding problems in the future.

	* Added fix to helper program `writeval' so that error messages
	returned from servers do not result in core dumps.

Sun Mar 23 16:58:43 1997  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* Added option switch so users can use the fullnames option.

	* Changed the way the catenate option works so that variables will
	not be catenated unless that's what users want.

	* Fixed loaddods help file: added examples, corrected examples,
	hopefully fixed typos.

Thu Mar  6 21:01:40 1997  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* Added vector/matrix catenation. If two or more urls (given using
	the multi-url option of loaddods) retrieve the same variable,
	those values are catenated to the same variable name. So, if one
	URL retrieves a 3 column 5 row array and a second URL gets a 3
	column 7 row array of the same name, loaddods will intern a single
	3 column 12 row array. Note that this is a loaddods feature -
	writeval knows nothing of this.

Thu Feb  6 12:33:28 1997  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* Changed the way writeval handles translation of String values to
	Float64. If the -f switch is given, all string values will be
	translated to float. First the software checks to see if the
	string is a lat/lon value of the form dddmmssh. If so it is
	translated into a +/- real number (with fractional degrees). If
	not, then strtod() is used to translate the string to a double. If
	that fails then NaN is output. Note that this is only true when
	the -f option is given; without the option strings are just
	strings. This introduces a bug in that with the -f option all
	strings that don't translate to floats become NaN.

	* Fixed many bugs - see the file `TODO' in this directory. 

Thu Jan  9 22:36:13 1997  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* Fixed situation where strange characters in identifiers confused
	Matlab. Non-alphanumerics are turned into underscores.

Mon Dec 23 11:31:48 1996  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* Fixed a nasty bug in the do_array function where single
	dimension arrays were sometimes created as two dimension arrays.
	The errant 2D arrays would be huge (billions and billions...) and
	cause Matlab to complain about not having enough memory.

