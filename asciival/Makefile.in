
# $Id: Makefile.in,v 1.43 1999/08/09 18:28:57 jimg Exp $

@SET_MAKE@

# Set makefile variables, some with values supplied by configure 
# DEFS gets the `-D' defines that describe what a particular system has
# or doesn't have.

# Note: I believe that Makefile is a special pseudo-target and when it is
# out of date with respect to Makefile.in is always rebuilt. Thus, it does
# not need to be listed under GENERATED files. Since configure has its own
# rule, it is also not listed. 7/28/99 jhrg
GENERATED=config_asciival.h 
PROG = $(GENERATED) asciival

DODS_ROOT = ../../..
WWW_ROOT=@WWW_ROOT@

INCS = -I. -I$(DODS_ROOT)/include @INCS@
DEFS = @DEFS@ -DDODS_VERSION=\"@VERSION@\" -DUSE_LIBGXX_INLINES
CPPFLAGS = @CPPFLAGS@ $(DEFS) $(INCS)
CFLAGS = @CFLAGS@
CXXFLAGS = @CXXFLAGS@
LDFLAGS = @LDFLAGS@ -L. -L$(DODS_ROOT)/lib
LFLAGS = -8
YFLAGS = -d
LIBS = -ldap++ @LIBS@
TAGS_FLAGS = --include=../dap/TAGS
TEST_COV_FLAGS = -ftest-coverage -fprofile-arcs

# Set the instalation directories; prefix can be set on the command line
# during Makefile construction with `./configure --prefix /my/choice'

prefix = @prefix@
exec_prefix = $(prefix)
bindir = $(exec_prefix)/bin
libdir = $(exec_prefix)/lib
includedir = $(prefix)/include
manext = 1
mandir = $(prefix)/man/man$(manext)

src = $(DODS_ROOT)/src
etcdir = $(DODS_ROOT)/etc

INSTALLMAN = man

SHELL = /bin/sh
srcdir = @srcdir@
version = @VERSION@
dir = asciival-@VERSION@

COMPONENT_NAME = DODS ASCII Client and Server Component

# testsuite specifics
RUNTEST = runtest
RUNTESTFLAGS = #--all --verbose

# names of key programs

LN_S = @LN_S@
CP = cp
AWK = @AWK@
CC = @CC@
CXX = @CXX@
YACC = @YACC@
LEX = @LEX@
AR = ar
TAGS = etags
RANLIB = @RANLIB@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
STRIP = strip

ASCIISRCS = AsciiByte.cc AsciiInt32.cc AsciiFloat64.cc AsciiStr.cc \
	AsciiUrl.cc AsciiArray.cc AsciiStructure.cc AsciiList.cc \
	AsciiSequence.cc AsciiGrid.cc AsciiUInt32.cc \
	AsciiInt16.cc AsciiUInt16.cc AsciiFloat32.cc

ASCIIOBJS = AsciiByte.o AsciiInt32.o AsciiFloat64.o AsciiStr.o \
	AsciiUrl.o AsciiArray.o AsciiStructure.o AsciiList.o \
	AsciiSequence.o AsciiGrid.o AsciiUInt32.o \
	AsciiInt16.o AsciiUInt16.o AsciiFloat32.o

AV_SRCS = ascii_val.cc name_map.cc

AV_OBJS = ascii_val.o name_map.o

ALLSRCS = $(ASCIISRCS) $(AV_SRCS) 

all: $(PROG)

asciival: $(AV_OBJS) $(ASCIIOBJS)
	$(CXX) $(LDFLAGS) -o asciival $(AV_OBJS) $(ASCIIOBJS) $(LIBS)

# Standard targets with some customization for das-test and dds-test

install: install-client

install-client: asciival
	$(INSTALL_PROGRAM) -s asciival $(etcdir)

# Tests

check: asciival asciival-check

asciival-check: asciival
	${RUNTEST} ${RUNTESTFLAGS} --tool asciival --srcdir testsuite

test-coverage: clean
	$(MAKE) $(MFLAGS) CXXFLAGS="$(CXXFLAGS) $(TEST_COV_FLAGS)" check

# Note that the gcov options -f and -b are useful but sometimes make looking
# at the results of coverage analysis a little taxing. -b reports on all
# branched and -f reports on all functions. The -l -o options summarize on a
# per-file basis. 3/27/98 jhrg
collect-coverage-data:
	(cd test-coverage; \
         cov_dat="coverage-data-`date +%m.%d.%y`"; \
	 touch $$cov_dat; \
	 for f in $(ALLSRCS); do \
	     echo "\n*** Coverage data for $$f ***\n" >> $$cov_dat; \
	     gcov -l -o ../ $$f >> $$cov_dat; \
         done)

# these tests all fail when das-test is linked with -lnew_debug.

clean:	
	-rm -f *.o *.sum *.log *~ core
	-rm -f $(PROG)

distclean: clean
	-rm -f config.status config.log config.cache

.PHONY: docs
docs:
	doc++ -d docs -f $(ASCIISRCS) $(AV_SRCS)

# This defines rules for configure, config.status, Makefile.
include $(DODS_ROOT)/etc/Makefile.common

.PHONY: depend
depend: 
	> dependencies
	@depend@ -m dependencies -- $(CPPFLAGS) -I@GPP_INC@ -- $(ALLSRCS)


# This is a special tar target because it builds not only the tar file for
# the core software but also the lib, etc, and bin directories. It assumes
# that the root directory for DODS is called `DODS' (no version number).
.PHONY: tar
tar:
	-rm -r config.cache config.log config.status
	cd $(DODS_ROOT)/.. && \
	tar --exclude '*/old' --exclude '*/.#*' --exclude '*/CVS' \
	    --gzip --create --dereference --file DODS-$(dir).tar.gz \
	    DODS/src/$(dir)

.PHONY: update-version
update-version: check-version
	@echo "Version is: `cat version.h`"
	mv ../asciival* ../asciival-$(version)
	touch $(DODS_ROOT)/VERSION; cat $(DODS_ROOT)/VERSION | \
	  $(AWK) ' \
	    BEGIN { found = 0 } \
	    { if ( $$0 ~ /^$(COMPONENT_NAME):/) \
	        { print "$(COMPONENT_NAME): $(version)"; found = 1 } \
	      else { print $$0 } } \
	    END { if ( ! found) { print "$(COMPONENT_NAME): $(version)" } \
	        }' > $(DODS_ROOT)/VERSION

# Compare the version encoded in this Makefile (set by configure) with the
# version in version.h. The version make variable is set up near the top of
# the Makefile.
.PHONY: check-version
check-version:
	@echo "Checking for version.h and Makefile version match-up"
	@if [ "$(version)" != "`cat version.h`" ]; \
	then \
		echo "You must manually re-run configure!"; \
		exit 1; \
	else \
		echo "Yes, they match."; \
	fi

.PHONY: tags
tags:
	$(TAGS) $(TAGS_FLAGS) *.cc *.h *.c

.SUFFIXES:      .o .cc .c .in

%.o: %.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) -o $@ $<

%.o: %.cc
	$(CXX) -c $(CXXFLAGS) $(CPPFLAGS) -o $@ $<

%.h: %.h.in
	${SHELL} ./config.status

include dependencies
